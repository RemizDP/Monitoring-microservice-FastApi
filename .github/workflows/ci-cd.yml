name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: monitoring-service

jobs:
  plan-a:
    name: Plan A - Build & Test Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build & compile binary
        run: |
          cd microserviceFastApi
          docker build -f Dockerfile.build -t ${IMAGE_NAME}-build .
          docker create --name app-container ${IMAGE_NAME}-build
          docker cp app-container:/app/dist/main ../build_artifact
          docker rm app-container

      - name: Run tests
        run: |
          cd microserviceFastApi
          docker run ${IMAGE_NAME}-build

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: build_artifact
          path: ./build_artifact

  plan-b:
    name: Plan B - Build Docker Image
    runs-on: ubuntu-latest
    needs: plan-a

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: build_artifact
          path: ./microserviceFastApi/build_artifact

      - name: Clone configs repo
        run: |
          git clone https://github.com/YOUR_ORG/monitoring-configs.git
          cp -r monitoring-configs/configs ./microserviceFastApi/configs

      - name: DockerHub login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker image
        run: |
          cd microserviceFastApi
          docker build -t "${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" .
          docker push "${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
